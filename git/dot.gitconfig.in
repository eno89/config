# my gitconfig

[user]
	name = kana
	email = nicht@s8.xrea.com

[color]
	ui = auto
[core]
	pager = less -r
	excludesfile = ~/.gitignore
[alias]
	amend = !git fix
	b = branch
	ba = branch -a
	br = branch -r
	cb = checkout -b
	ci = commit
	co = checkout
	cob = checkout -b
	cp = cherry-pick
	d = diff HEAD
	dl = diff HEAD^
	ds = diff --cached
	du = diff
	edit-conflicted-files = !$EDITOR $(git ls-conflicted-files)
	f = fetch
	fix = commit --amend
	l = log
	l1 = log --pretty=oneline --abbrev-commit
	l1f = log --pretty=oneline
	lg = log --graph --pretty=oneline --abbrev-commit
	lgd = !git lg --decorate
	lgf = log --graph --pretty=oneline
	lgs = !git lg --source
	lgss = !git lgs --branches --tags
	lr = <<<
		n=10
		1="${1:-$n}"
		if ! [ "${1##[0-9]*}" = "" ]
		then
		  t="$1"
		  1="${2:-$n}"
		  2="$t"
		fi
		git --no-pager l1 --reverse -"$1" "${2:-HEAD}"
	>>>
	ls = ls-files
	ls-conflicted-files = ls-files --unmerged
	m = merge --log
	m1 = merge --log HEAD@{1}
	m2 = merge --log HEAD@{2}
	m3 = merge --log HEAD@{3}
	mb = merge-base
	pa = !git pushall
	publish = !git pushall $(git rev-parse --symbolic --branches --tags) \
	           "$@"
	publish-all = <<<
		for repos in ~/working/*/
		do
		  pushd "$repos" >/dev/null
		  echo
		  echo "==== $PWD"
		  for remote in $(git config --get-regexp \
		                      '^remote\..*\.url$' \
		                      "^(git@github\.com:kana|$HOME/Dropbox)" \
		                  | sed 's/^remote\.\([^.]*\)\.url .*$/\1/')
		  do
		    echo "---- $remote"
		    git push "$remote" --all -f
		    git push "$remote" --tags -f
		  done
		  popd >/dev/null
		done
	>>>
	pushall = <<<
		for i in $(git remote)
		do
		  echo "# git push $i $@"
		  git push "$i" "$@"
		done
	>>>
	r1 = rebase HEAD@{1}
	r2 = rebase HEAD@{2}
	r3 = rebase HEAD@{3}
	ra = rebase --abort
	rc = rebase --continue
	review = <<<
		git log --reverse -p "$1..HEAD"
	>>>
	rh = reset --hard
	ri = <<<
		git rebase -i "HEAD~${1:-10}"
	>>>
	rs = reset --soft
	rw = reset --hard ORIG_HEAD
	s = show
	s1 = show HEAD@{1}
	s2 = show HEAD@{2}
	s3 = show HEAD@{3}
	sa = stash apply
	sd = stash drop
	since = <<<
		git lg "$1..HEAD"
	>>>
	sl = stash list
	sm = submodule
	sma = submodule add
	smi = submodule init
	sms = submodule status
	smu = submodule update
	sp = stash pop
	ss = stash save
	st = status
	staged = diff --cached
	sv = stash save
	t = tag
	td = tag -d
	unstaged = diff

# __END__
