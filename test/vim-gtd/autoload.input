" Tests for vim-gtd / autoload
function s:test_gtd_initialize_1()  "{{{1
  Title "gtd#initialize() - without any content"

  % delete _
  Assert getline(1, '$') ==> ['']

  call gtd#initialize()
  Assert getline(1, '$') ==> [
  \ 'INBOX',
  \ 'NEXT ACTIONS',
  \ 'CALENDAR',
  \ 'PROJECTS',
  \ 'WAITING FOR',
  \ 'SOMEDAY',
  \ 'ARCHIVE',
  \ 'TRASH',
  \ '; vim: filetype=gtd']
endfunction




function s:test_gtd_initialize_2()  "{{{1
  Title "gtd#initialize() - with some content"

  % delete _
  put =['a', 'b', 'c']
  Assert getline(1, '$') ==> ['', 'a', 'b', 'c']

  call gtd#initialize()
  Assert getline(1, '$') ==> [
  \ 'INBOX',
  \ 'NEXT ACTIONS',
  \ 'CALENDAR',
  \ 'PROJECTS',
  \ 'WAITING FOR',
  \ 'SOMEDAY',
  \ 'ARCHIVE',
  \ 'TRASH',
  \ '; vim: filetype=gtd']
endfunction




function s:test_gtd_status_1()  "{{{1
  Title "gtd#status() - without any content"

  % delete _
  Assert getline(1, '$') ==> ['']
  Assert gtd#status() ==> [0, 0]
endfunction




function s:test_gtd_status_2()  "{{{1
  Title "gtd#status() - with some content"

  % delete _
  put =['#1', 'x', '#3', '#999']
  Assert getline(1, '$') ==> ['', '#1', 'x', '#3', '#999']

  Assert gtd#status() ==> [999, 3]
endfunction




Test  "{{{1

" __END__
" vim: filetype=vim foldmethod=marker
