==== ku_omnifunc findstart 0
---- It should return [] with no source 
...
---- It should return some candidate with a source 
.....
---- It should return some candidate with a source and a:base contains a prompt 
....
---- It requires to reset side effect 
...

==== ku_omnifunc findstart 1
---- It requires the following initialization 
..
---- It should succeed with the default state (there is only the prompt) 
..
---- It should succeed with the prompt and some characters 
..
---- It should succeed with no character 
..
---- It should succeed with some characters but no prompt 
..
---- It requires to reset side effect 
...

==== s_cache_key 
---- It should return a mangled version of a given pattern 
....

==== s_cache_lcandidates 
---- It requires the following initialization 
...
---- It should cache a given lcandidates for non-volatile sources 
.
---- It should not cache a given lcandidates for volatile sources 
.
---- It should cache lcandidates for later use 
....
---- It requires to reset side effect 
..

==== s_filter_lcandidates 
---- It should return candidates as-is with no filter 
.
---- It should return candidates filtered by M 
.
---- It should return candidates filtered by ODD 
.
---- It should return candidates filtered by M and ODD 
.
---- It should return the same candidates regardless of order of filters 
.

==== s_get_cached_lcandidates 
---- It requires the following initialization 
..
---- It should return s:NO_CACHE if there is no cached lcandidates 
...
---- It should return a cached one if there is a cached lcandidates 
...
---- It should always return s:NO_CACHE for s:CACHE_VOLATILE 
...
---- It should return different values for different sources 
...
---- It requires to reset side effect 
.

==== s_kinds_from_candidate 
---- It requires the following initialization 
....
---- It should return kinds defined by a source 
.
---- It should return kinds defined by a candidate 
.
---- It requires to reset side effect 
.

==== s_lcandidates_from_pattern ...
---- It should return [] with no source 
.
---- It should return some candidates with a source 
.
---- It should return some candidates with multiple sources 
.
---- It should return some candidates with multiple sources - duplicate sources 
.
---- It should return sorted candidates for a source with sorters 
.
---- It should return partially sorted candidates for sources with/without sorters 
.

==== s_lcandidates_from_pattern args source
---- It requires the following initialization 
..
---- It should pass a valid args.source 
.
---- It requires to reset side effect 


==== s_lcandidates_from_pattern cache constant
---- It requires the following initialization 
.
---- It should call source.gather_candidates only once 
..................
---- It requires to reset side effect 


==== s_lcandidates_from_pattern cache gel
---- It requires the following initialization 
.
---- It should call source.gather_candidates by "special characters" in pattern 
........................
---- It requires to reset side effect 


==== s_lcandidates_from_pattern cache invalid
---- It requires the following initialization 
.
---- It should raise error but behave as if "pattern" 
......
---- It requires to reset side effect 


==== s_lcandidates_from_pattern cache pattern
---- It requires the following initialization 
.
---- It should call source.gather_candidates for different pattern 
............
---- It requires to reset side effect 


==== s_lcandidates_from_pattern cache volatile
---- It requires the following initialization 
.
---- It should call source.gather_candidates for each time 
......
---- It requires to reset side effect 


==== s_make_lcandidates_for_a_source 
---- It requires the following initialization 
.
---- It should return matched/filtered/sorted/normalized candidates 
.
---- It requires to reset side effect 
.

==== s_matched_lcandidates 
---- It requires the following initialization 

---- It should return nothing with no matcher 
.
---- It should return some candidates with the simple matcher 
.
---- It should return some candidates with a custom matcher 
.
---- It should return some candidates matched with "simple" or "odd" 
.
---- It requires to reset side effect 


==== s_normalize_candidate 
---- It should normalize a given candidate with a given source 
..

==== s_raw_lcandidates 
---- It requires the following initialization 
.
---- It should return raw candidates gatherd by a given source 
.
---- It requires to reset side effect 
.

==== s_raw_lcandidates cache constant
---- It requires the following initialization 
.....
---- It should not call source.gather_candidates anymore for session_1 
xxxx
---- It should return more proper cache if there is such one 
.xxxxx
---- It should call source.gather_candidates for different session 
xx
---- It requires to reset side effect 
.

==== s_raw_lcandidates cache gel
---- It requires the following initialization 
.....
---- It should not call source.gather_candidates unless a special char is inserted 
xxxx
---- It should return more proper cache if there is such one 
.xxx
---- It should call source.gather_candidates if a special char is insereted 
.x
---- It should call source.gather_candidates for different session 
xx
---- It requires to reset side effect 
.

==== s_raw_lcandidates cache pattern
---- It requires the following initialization 
....
---- It should call source.gather_candidates 
....
---- It requires to reset side effect 
.

==== s_raw_lcandidates cache volatile
---- It requires the following initialization 
....
---- It should call source.gather_candidates 
....
---- It requires to reset side effect 
.

==== s_sort_lcandidates 
---- It should return unsorted candidates with no sorter 
.
---- It should return sorted candidates with a sorter 
.
---- It should return sorted candidates with a custom sorter 
.
---- It should return candidates sorted by "simple" then sorted by "reverse" 
.



**** Result ****


In s_raw_lcandidates cache constant

It should not call source.gather_candidates anymore for session_1
FAILED: Call('s:raw_lcandidates', args, session_1) ==# [   candidate_n_a,   candidate_n_s, ]
  expected: [{'word': 'alter', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'constant', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': '', 'gather_candidates': function('17'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}, {'word': 'sasara', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'constant', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': '', 'gather_candidates': function('17'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should not call source.gather_candidates anymore for session_1
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 2

It should not call source.gather_candidates anymore for session_1
FAILED: Call('s:raw_lcandidates', args, session_1) ==# [   candidate_n_a,   candidate_n_s, ]
  expected: [{'word': 'alter', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'constant', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': '', 'gather_candidates': function('17'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}, {'word': 'sasara', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'constant', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': '', 'gather_candidates': function('17'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should not call source.gather_candidates anymore for session_1
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 3

It should return more proper cache if there is such one
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 4

It should return more proper cache if there is such one
FAILED: Call('s:raw_lcandidates', args, session_1) ==# [   candidate_n_s, ]
  expected: [{'word': 'sasara', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'constant', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': '', 'gather_candidates': function('17'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should return more proper cache if there is such one
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 5

It should return more proper cache if there is such one
FAILED: Call('s:raw_lcandidates', args, session_1) ==# [   candidate_n_s, ]
  expected: [{'word': 'sasara', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'constant', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': '', 'gather_candidates': function('17'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should return more proper cache if there is such one
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 6

It should call source.gather_candidates for different session
FAILED: Call('s:raw_lcandidates', args, session_2) ==# [   candidate_n_a,   candidate_n_s, ]
  expected: [{'word': 'alter', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'constant', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': '', 'gather_candidates': function('17'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}, {'word': 'sasara', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'constant', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': '', 'gather_candidates': function('17'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should call source.gather_candidates for different session
FAILED: source_a.ku_source_a_count == 2
  expected: 2
       got: 7


In s_raw_lcandidates cache gel

It should not call source.gather_candidates unless a special char is inserted
FAILED: Call('s:raw_lcandidates', args, session_1) ==# [   candidate_n_a,   candidate_n_s, ]
  expected: [{'word': 'alter', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'gel', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': 't', 'gather_candidates': function('18'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}, {'word': 'sasara', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'gel', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': 't', 'gather_candidates': function('18'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should not call source.gather_candidates unless a special char is inserted
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 2

It should not call source.gather_candidates unless a special char is inserted
FAILED: Call('s:raw_lcandidates', args, session_1) ==# [   candidate_n_a,   candidate_n_s, ]
  expected: [{'word': 'alter', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'gel', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': 't', 'gather_candidates': function('18'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}, {'word': 'sasara', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'gel', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': 't', 'gather_candidates': function('18'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should not call source.gather_candidates unless a special char is inserted
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 3

It should return more proper cache if there is such one
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 4

It should return more proper cache if there is such one
FAILED: Call('s:raw_lcandidates', args, session_1) ==# [   candidate_n_a, ]
  expected: [{'word': 'alter', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'gel', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': 't', 'gather_candidates': function('18'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should return more proper cache if there is such one
FAILED: source_a.ku_source_a_count == 1
  expected: 1
       got: 5

It should call source.gather_candidates if a special char is insereted
FAILED: source_a.ku_source_a_count == 2
  expected: 2
       got: 6

It should call source.gather_candidates for different session
FAILED: Call('s:raw_lcandidates', args, session_2) ==# [   candidate_n_a,   candidate_n_s, ]
  expected: [{'word': 'alter', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'gel', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': 't', 'gather_candidates': function('18'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}, {'word': 'sasara', 'menu': 'source_a', 'ku__source': {'filters': [], 'cache_type': 'gel', 'on_action': function('ku#default_on_action'), 'name': 'source_a', 'default_action_table': {}, 'sorters': [], 'kind_names': ['source/source_a', 'common'], 'ku_source_a_count': 7, 'matchers': [function('ku#matcher#simple#matches_p')], 'default_key_table': {}, 'special_chars': 't', 'gather_candidates': function('18'), 'valid_for_acc_p': function('ku#default_valid_for_acc_p')}, 'dup': 1}]
       got: [{'word': 'alter'}, {'word': 'sasara'}]

It should call source.gather_candidates for different session
FAILED: source_a.ku_source_a_count == 3
  expected: 3
       got: 7


223 examples, 21 failures
