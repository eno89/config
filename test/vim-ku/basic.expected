===== "ku#available_source_names()"
TEST: ku#available_sources()  ==>  {} ... ok
TEST: ku#available_source_names()  ==>  [] ... ok
TEST: ku#define_source({'gather-items': F, 'name': 'test'})  ==>  1 ... ok
TEST: ku#available_sources()['test']  ==>  {'gather-items': F, 'name': 'test'} ... ok
TEST: ku#available_source_names()  ==>  ['test'] ... ok
TEST: ku#define_source({'gather-items': G, 'name': 'test'})  ==>  1 ... ok
TEST: ku#available_sources()['test']  ==>  {'gather-items': G, 'name': 'test'} ... ok
TEST: ku#available_source_names()  ==>  ['test'] ... ok
TEST: ku#define_source({'gather-items': F, 'name': 'abc'})  ==>  1 ... ok
TEST: ku#available_sources()['abc']  ==>  {'gather-items': F, 'name': 'abc'} ... ok
TEST: ku#available_source_names()  ==>  ['abc', 'test'] ... ok
Result: 11 / 11

===== "ku#available_source_p()"
TEST: ku#available_sources()  ==>  {} ... ok
TEST: ku#available_source_names()  ==>  [] ... ok
TEST: ku#available_source_p('test')  ==>  0 ... ok
TEST: ku#available_source_p('abc')  ==>  0 ... ok
TEST: ku#available_source_p('NoSuchSource')  ==>  0 ... ok
TEST: ku#define_source({'gather-items': F, 'name': 'test'})  ==>  1 ... ok
TEST: ku#available_sources()['test']  ==>  {'gather-items': F, 'name': 'test'} ... ok
TEST: ku#available_source_names()  ==>  ['test'] ... ok
TEST: ku#available_source_p('test')  ==>  1 ... ok
TEST: ku#available_source_p('abc')  ==>  0 ... ok
TEST: ku#available_source_p('NoSuchSource')  ==>  0 ... ok
TEST: ku#define_source({'gather-items': G, 'name': 'test'})  ==>  1 ... ok
TEST: ku#available_sources()['test']  ==>  {'gather-items': G, 'name': 'test'} ... ok
TEST: ku#available_source_names()  ==>  ['test'] ... ok
TEST: ku#available_source_p('test')  ==>  1 ... ok
TEST: ku#available_source_p('abc')  ==>  0 ... ok
TEST: ku#available_source_p('NoSuchSource')  ==>  0 ... ok
TEST: ku#define_source({'gather-items': F, 'name': 'abc'})  ==>  1 ... ok
TEST: ku#available_sources()['abc']  ==>  {'gather-items': F, 'name': 'abc'} ... ok
TEST: ku#available_source_names()  ==>  ['abc', 'test'] ... ok
TEST: ku#available_source_p('test')  ==>  1 ... ok
TEST: ku#available_source_p('abc')  ==>  1 ... ok
TEST: ku#available_source_p('NoSuchSource')  ==>  0 ... ok
Result: 23 / 23

===== "ku#available_sources()"
TEST: ku#available_sources()  ==>  {} ... ok
TEST: ku#available_sources()  ==>  Ref('available_sources') ... ok
Error detected while processing function <SNR>43_cmd_Test..<SNR>44_test_ku_available_sources..ku#define_source..<SNR>45_valid_key_p:
line    2:
Invalild source: Without key 'gather-items'
TEST: ku#define_source({})  ==>  0 ... ok
line   12:
Invalild source: Key 'gather-items' must be function but given value is 0
TEST: ku#define_source({'gather-items': 0, 'name': 0})  ==>  0 ... ok
Invalild source: Key 'gather-items' must be function but given value is 0
TEST: ku#define_source({'gather-items': 0, 'name': 'test'})  ==>  0 ... ok
Invalild source: Key 'name' must be string but given value is 0
TEST: ku#define_source({'gather-items': F, 'name': 0})  ==>  0 ... ok
TEST: ku#available_sources()  ==>  {} ... ok
TEST: ku#available_sources()  ==>  Ref('available_sources') ... ok
TEST: ku#define_source({'gather-items': F, 'name': 'test'})  ==>  1 ... ok
TEST: ku#available_sources()['test']  ==>  {'gather-items': F, 'name': 'test'} ... ok
TEST: ku#available_sources()  ==>  Ref('available_sources') ... ok
TEST: ku#define_source({'gather-items': G, 'name': 'test'})  ==>  1 ... ok
TEST: ku#available_sources()['test']  ==>  {'gather-items': G, 'name': 'test'} ... ok
TEST: ku#available_sources()  ==>  Ref('available_sources') ... ok
Result: 14 / 14

===== "ku#define_default_ui_key_mappings()"
TEST: maparg('<C-c>', 'i')  ==>  'QUIT-INSERT' ... ok
TEST: maparg('<C-c>', 'n')  ==>  'QUIT-NORMAL' ... ok
TEST: maparg('<C-i>', 'i')  ==>  '' ... ok
TEST: maparg('<C-i>', 'n')  ==>  '' ... ok
TEST: maparg('<C-m>', 'i')  ==>  '' ... ok
TEST: maparg('<C-m>', 'n')  ==>  '' ... ok
TEST: maparg('<Enter>', 'i')  ==>  '' ... ok
TEST: maparg('<Enter>', 'n')  ==>  '' ... ok
TEST: maparg('<Return>', 'i')  ==>  '' ... ok
TEST: maparg('<Return>', 'n')  ==>  '' ... ok
TEST: maparg('<Tab>', 'i')  ==>  '' ... ok
TEST: maparg('<Tab>', 'n')  ==>  '' ... ok
TEST: maparg('<C-c>', 'i')  ==>  'QUIT-INSERT' ... ok
TEST: maparg('<C-c>', 'n')  ==>  'QUIT-NORMAL' ... ok
TEST: maparg('<C-i>', 'i')  ==>  '<Plug>(ku-choose-and-do-an-action)' ... ok
TEST: maparg('<C-i>', 'n')  ==>  '<Plug>(ku-choose-and-do-an-action)' ... ok
TEST: maparg('<C-m>', 'i')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<C-m>', 'n')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Enter>', 'i')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Enter>', 'n')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Return>', 'i')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Return>', 'n')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Tab>', 'i')  ==>  '<Plug>(ku-choose-and-do-an-action)' ... ok
TEST: maparg('<Tab>', 'n')  ==>  '<Plug>(ku-choose-and-do-an-action)' ... ok
TEST: maparg('<C-c>', 'i')  ==>  '<Plug>(ku-quit-session)' ... ok
TEST: maparg('<C-c>', 'n')  ==>  '<Plug>(ku-quit-session)' ... ok
TEST: maparg('<C-i>', 'i')  ==>  '<Plug>(ku-choose-and-do-an-action)' ... ok
TEST: maparg('<C-i>', 'n')  ==>  '<Plug>(ku-choose-and-do-an-action)' ... ok
TEST: maparg('<C-m>', 'i')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<C-m>', 'n')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Enter>', 'i')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Enter>', 'n')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Return>', 'i')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Return>', 'n')  ==>  '<Plug>(ku-do-the-default-action)' ... ok
TEST: maparg('<Tab>', 'i')  ==>  '<Plug>(ku-choose-and-do-an-action)' ... ok
TEST: maparg('<Tab>', 'n')  ==>  '<Plug>(ku-choose-and-do-an-action)' ... ok
Result: 36 / 36

===== "ku#define_source()"
TEST: Ref('available_sources')  ==>  {} ... ok
Error detected while processing function <SNR>43_cmd_Test..<SNR>44_test_ku_define_source..ku#define_source..<SNR>45_valid_key_p:
line    2:
Invalild source: Without key 'gather-items'
TEST: ku#define_source({})  ==>  0 ... ok
line   12:
Invalild source: Key 'gather-items' must be function but given value is 0
TEST: ku#define_source({'gather-items': 0, 'name': 0})  ==>  0 ... ok
Invalild source: Key 'gather-items' must be function but given value is 0
TEST: ku#define_source({'gather-items': 0, 'name': 'test'})  ==>  0 ... ok
Invalild source: Key 'name' must be string but given value is 0
TEST: ku#define_source({'gather-items': F, 'name': 0})  ==>  0 ... ok
TEST: Ref('available_sources')  ==>  {} ... ok
TEST: ku#define_source({'gather-items': F, 'name': 'test'})  ==>  1 ... ok
TEST: Ref('available_sources')['test']  ==>  {'gather-items': F, 'name': 'test'} ... ok
TEST: ku#define_source({'gather-items': G, 'name': 'test'})  ==>  1 ... ok
TEST: Ref('available_sources')['test']  ==>  {'gather-items': G, 'name': 'test'} ... ok
Result: 10 / 10

===== "ku#start()"
TEST: &l:buftype  ==>  '' ... ok
TEST: winnr('$')  ==>  1 ... ok
TEST: winnr()  ==>  1 ... ok
TEST: ku#start()  ==>  1 ... ok
TEST: nr2char(getchar(0))  ==>  'A' ... ok
TEST: nr2char(getchar(0))  ==>  'a' ... ok
TEST: nr2char(getchar(0))  ==>  'b' ... ok
TEST: nr2char(getchar(0))  ==>  'c' ... ok
TEST: nr2char(getchar(0))  ==>  '' ... ok
TEST: &g:completeopt  ==>  'menu,menuone' ... ok
TEST: &l:filetype  ==>  'ku' ... ok
TEST: [line('.'), col('.')]  ==>  [2, 1] ... ok
TEST: bufnr('') != first_bufnr  ==>  1 ... ok
TEST: getline(1, line('$'))  ==>  ['', '>'] ... ok
TEST: winnr('$')  ==>  2 ... ok
TEST: winnr()  ==>  1 ... ok
TEST: ku#start()  ==>  1 ... ok
TEST: nr2char(getchar(0))  ==>  'A' ... ok
TEST: nr2char(getchar(0))  ==>  '' ... ok
TEST: bufnr('')  ==>  second_bufnr ... ok
TEST: winnr('$')  ==>  2 ... ok
TEST: winnr()  ==>  1 ... ok
TEST: ku#start()  ==>  1 ... ok
TEST: nr2char(getchar(0))  ==>  'A' ... ok
TEST: nr2char(getchar(0))  ==>  '' ... ok
TEST: bufnr('') != first_bufnr  ==>  1 ... ok
TEST: bufnr('') != second_bufnr  ==>  1 ... ok
TEST: winnr('$')  ==>  2 ... ok
TEST: winnr()  ==>  1 ... ok
TEST: ku#start()  ==>  1 ... ok
TEST: nr2char(getchar(0))  ==>  'A' ... ok
TEST: nr2char(getchar(0))  ==>  '' ... ok
TEST: winnr()  ==>  1 ... ok
TEST: winnr('$')  ==>  2 ... ok
Error detected while processing function <SNR>43_cmd_Test..<SNR>44_test_ku_start..ku#start:
line    6:
Invalid source name: 'invalid'
TEST: ku#start(['invalid'])  ==>  0 ... ok
TEST: nr2char(getchar(0))  ==>  '' ... ok
TEST: bufnr('')  ==>  first_bufnr ... ok
TEST: winnr('$')  ==>  1 ... ok
TEST: winnr()  ==>  1 ... ok
TEST: ku#start(0, 'def')  ==>  1 ... ok
TEST: nr2char(getchar(0))  ==>  'A' ... ok
TEST: nr2char(getchar(0))  ==>  '' ... ok
TEST: bufnr('') != first_bufnr  ==>  1 ... ok
TEST: getline(1, line('$'))  ==>  ['', '>def'] ... ok
TEST: winnr('$')  ==>  2 ... ok
TEST: winnr()  ==>  1 ... ok
line   12:
Already active
TEST: ku#start()  ==>  0 ... ok
Result: 47 / 47

===== "s:get_key()"
Result: 0 / 0

===== "s:initialize_ku_buffer()"
TEST: &l:bufhidden  ==>  'hide' ... ok
TEST: &l:buflisted  ==>  0 ... ok
TEST: &l:buftype  ==>  'nofile' ... ok
TEST: &l:omnifunc  ==>  'ku#omnifunc' ... ok
TEST: &l:swapfile  ==>  0 ... ok
TEST: bufname('')  ==>  Ref('KU_BUFFER_NAME') ... ok
TEST: exists('#plugin-ku#BufLeave#<buffer>')  ==>  1 ... ok
TEST: exists('#plugin-ku#CursorMovedI#<buffer>')  ==>  1 ... ok
TEST: exists('#plugin-ku#InsertEnter#<buffer>')  ==>  1 ... ok
TEST: exists('#plugin-ku#TabLeave#<buffer>')  ==>  0 ... ok
TEST: exists('#plugin-ku#WinLeave#<buffer>')  ==>  1 ... ok
TEST: maparg('<BS>', 'i') != ''  ==>  1 ... ok
TEST: maparg('<C-h>', 'i') != ''  ==>  1 ... ok
TEST: maparg('<Plug>(ku-choose-and-do-an-action)', 'i') != ''  ==>  1 ... ok
TEST: maparg('<Plug>(ku-choose-and-do-an-action)', 'n') != ''  ==>  1 ... ok
TEST: maparg('<Plug>(ku-do-the-default-action)', 'i') != ''  ==>  1 ... ok
TEST: maparg('<Plug>(ku-do-the-default-action)', 'n') != ''  ==>  1 ... ok
TEST: maparg('<Plug>(ku-quit-session)', 'i') != ''  ==>  1 ... ok
TEST: maparg('<Plug>(ku-quit-session)', 'n') != ''  ==>  1 ... ok
TEST: maparg('<C-c>', 'n')  ==>  '<Plug>(ku-quit-session)' ... ok
" autocmd FileType ku
TEST: maparg('<C-c>', 'n')  ==>  '' ... ok
TEST: maparg('<C-c>', 'n')  ==>  '' ... ok
Result: 22 / 22

===== "s:ku_active_p()"
TEST: Call('s:ku_active_p')  ==>  0 ... ok
TEST: ku#start()  ==>  1 ... ok
TEST: Call('s:ku_active_p')  ==>  1 ... ok
TEST: Call('s:ku_active_p')  ==>  0 ... ok
Result: 4 / 4

===== "s:new_session()"
TEST: ku#define_source({'gather-items': F, 'name': 'abc'})  ==>  1 ... ok
TEST: ku#define_source({'gather-items': G, 'name': 'test'})  ==>  1 ... ok
TEST: ku#available_sources()['abc']  ==>  {'gather-items': F, 'name': 'abc'} ... ok
TEST: ku#available_sources()['test']  ==>  {'gather-items': G, 'name': 'test'} ... ok
TEST: ku#available_source_names()  ==>  ['abc', 'test'] ... ok
TEST: has_key(session_a, 'id')  ==>  1 ... ok
TEST: session_a.original_completeopt  ==>  original_completeopt ... ok
TEST: session_a.original_curwinnr  ==>  original_curwinnr ... ok
TEST: session_a.original_winrestcmd  ==>  original_winrestcmd ... ok
TEST: session_a.sources  ==>  [] ... ok
TEST: has_key(session_b, 'id')  ==>  1 ... ok
TEST: session_b.original_completeopt  ==>  original_completeopt ... ok
TEST: session_b.original_curwinnr  ==>  original_curwinnr ... ok
TEST: session_b.original_winrestcmd  ==>  original_winrestcmd ... ok
TEST: session_b.sources  ==>  [] ... ok
TEST: session_b.id isnot session_a.id  ==>  1 ... ok
TEST: has_key(session, 'id')  ==>  1 ... ok
TEST: session.original_completeopt  ==>  original_completeopt ... ok
TEST: session.original_curwinnr  ==>  original_curwinnr ... ok
TEST: session.original_winrestcmd  ==>  original_winrestcmd ... ok
TEST: session.sources  ==>  [   ku#available_sources()['test'],   ku#available_sources()['abc'] ] ... ok
Result: 21 / 21

===== "s:on_CursorMovedI()"
Result: 0 / 0

===== "s:on_InsertEnter()"
Result: 0 / 0

===== "s:quit_session()"
Result: 0 / 0

===== "s:valid_key_p()"
Error detected while processing function <SNR>43_cmd_Test..<SNR>44_test_s_valid_key_p..Call..<SNR>45_valid_key_p:
line    2:
Invalild source: Without key '8bit'
TEST: Call('s:valid_key_p', {}, '8bit', 0)  ==>  0 ... ok
Invalild source: Without key 0
TEST: Call('s:valid_key_p', {'8bit': 'rave'}, 0, 'string')  ==>  0 ... ok
TEST: Call('s:valid_key_p', {'8bit': 'rave'}, '8bit', 'string')  ==>  1 ... ok
Result: 3 / 3

===== Total
Result: 191 / 191
