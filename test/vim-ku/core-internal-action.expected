==== s_choose_action 
---- It requires that there is no character in the typeahead buffer 
.
---- It should return the name of an action corresponding to a typed key 
xxxx
---- It should return 0 if there is no suitable action for a typed key 
.xx

==== s_custom_action_1 
---- It should succeed to define an action 
....
---- It should succeed to override an existing action 
...

==== s_custom_action_2 
---- It should fail for error cases 

Error detected while processing function vspec#test..<SNR>3_describe__s_custom_action_2..Call..vspec#call..<SNR>6_custom_action_2:
line    7:
Action 'name2' is not defined for 'kind2'...
Action 'name2' is not defined for 'file'..
---- It should succeed to define an action 
....
---- It should succeed to override an existing action 
...

==== s_custom_kind_action_table 
---- It should succeed with valid name "file" 
....
---- It currently accepts invalid name "!@#$%" 
....
---- It should create different custom kind action tables 
.

==== s_default_kind_action_table 
---- It should return {} for a kind which is not defined 
.
---- It should return the default action table 
...

==== s_find_action 
---- It should always return 0 for 'kinds' with no kind definition 
....
---- It should succeed for 'kinds' with a usual kind definition 
....
---- It should succeed for 'kinds' with practical kind definitions 
....
---- It should return custom actions rather than default actions 
........

==== s_guess_candidate 



**** Result ****


In s_choose_action 

It should return the name of an action corresponding to a typed key
FAILED: Call('s:choose_action', candidate) ==# 'cd'
  expected: 'cd'
       got: 'default'

It should return the name of an action corresponding to a typed key
FAILED: nr2char(getchar(0)) ==# ''
  expected: ''
       got: '/'

It should return the name of an action corresponding to a typed key
FAILED: Call('s:choose_action', candidate) ==# 'Left'
  expected: 'Left'
       got: 'default'

It should return the name of an action corresponding to a typed key
FAILED: nr2char(getchar(0)) ==# ''
  expected: ''
       got: 'H'

It should return 0 if there is no suitable action for a typed key
FAILED: nr2char(getchar(0)) ==# ''
  expected: ''
       got: '?'

It should return 0 if there is no suitable action for a typed key
FAILED: typeahead == ''
  expected: ''
       got: '??'


58 examples, 6 failures
