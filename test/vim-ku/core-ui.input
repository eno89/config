" Test: vim-ku core-ui
" Set up  "{{{1

let s:SID_PREFIX = ku#_sid_prefix()

function Call(function_name, ...)
  return call(substitute(a:function_name, '^s:', s:SID_PREFIX, ''), a:000)
endfunction


let s:VARS = ku#_local_variables()

function! Ref(variable_name)
  return s:VARS[a:variable_name]
endfunction

function! Set(variable_name, value)
  let s:VARS[a:variable_name] = a:value
endfunction


command! NewBuffer  bwipeout! | enew!




function s:test_ui_named_key_mappings()  "{{{1
  Title "UI: Named Key Mappings"

  " Initial state.
  NewBuffer
  let original_bufnr = bufnr('')
  let original_window_layout = winrestcmd()

  Assert ku#start() ==> 1
  let ku_bufnr = bufnr('')
  let ku_window_layout = winrestcmd()

  Assert nr2char(getchar(0)) ==> 'A'
  Assert nr2char(getchar(0)) ==> ''

  " Check the effect of named key mappings.
  " FIXME: NIY: <Plug>(ku-choose-and-do-an-action)
  " FIXME: NIY: <Plug>(ku-do-the-default-action)

  " <Plug>(ku-quit-session)
  execute 'normal' "\<Plug>(ku-quit-session)"
  Assert bufnr('') != ku_bufnr ==> 1
  Assert bufnr('') ==> original_bufnr
  Assert winrestcmd() != ku_window_layout ==> 1
  Assert winrestcmd() ==> original_window_layout

  " Reset side effect.
  Assert ku#start() ==> 1
  noautocmd bwipeout!  " :noautocmd to avoid calling event handlers.
endfunction




Test  "{{{1

" __END__
" vim: filetype=vim foldmethod=marker
