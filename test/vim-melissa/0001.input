; Initialization  ;{{{1
(use gauche.test)
(test-start "vim-melissa: melissac")
(load "./vim/dot.vim/bin/melissac")
(with-module user (set! main #f))  ; Here "main" must not be called.
(import vim-melissa)




(test-section "compile-vise")  ;{{{1




(test-section "define-vise-syntax")  ;{{{1




(test-section "generate-vim-script")  ;{{{1




(test-section "translate-melissa-expr")  ;{{{1

(test* "number" 1 (translate-melissa-expr 1))
(test* "string" "string" (translate-melissa-expr "string"))
(test* "symbol" 'symbol (translate-melissa-expr 'symbol))
(test* "keyword" :keyword (translate-melissa-expr :keyword))

(test* "(symbol . something)" '(symbol . something)
       (translate-melissa-expr '(symbol . something)))
(test* "(symbol)" '(symbol)
       (translate-melissa-expr '(symbol)))
(test* "(symbol something)" '(symbol something)
       (translate-melissa-expr '(symbol something)))

(test* "(:keyword . something)" '(:keyword . something)
       (translate-melissa-expr '(:keyword . something)))
(test* "(:keyword)" '(generate-vim-script '(:keyword))
       (translate-melissa-expr '(:keyword)))
(test* "(:keyword something)" '(generate-vim-script '(:keyword something))
       (translate-melissa-expr '(:keyword something)))




(test-section "vise-macroexpand")  ;{{{1




(test-section "vise-macroexpand1")  ;{{{1




(test-end)  ;{{{1
; vim: filetype=scheme foldmethod=marker
