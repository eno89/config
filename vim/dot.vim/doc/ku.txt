*ku.txt*	Support to do something

Version 0.1.0
Copyright (C) 2008 kana <http://whileimautomaton.net/>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*ku-contents*

Introduction		|ku-introduction|
Interface		|ku-interface|
  Commands		  |ku-commands|
  Functions		  |ku-functions|
  Key Mapings		  |ku-key-mappings|
  Pattern		  |ku-pattern|
  Default Action Table	  |ku-default-action-table|
  Default Key Table	  |ku-default-key-table|
Sources			|ku-sources|
Customizing		|ku-customizing|
Terms			|ku-terms|
Bugs			|ku-bugs|
Changelog		|ku-changelog|




==============================================================================
INTRODUCTION					*ku-introduction*

Ku is a Vim plugin to provide the interface to choose many items from a source
with automatic completion and fuzzy pattern matching.

To start selection, use |ku-commands|.  The commands will open the |ku-window|
to take your input.  As you input some characters, |ins-completion-menu| will
be automatically appeared and updated to show the proper candidates for the
input pattern (see |ku-pattern| for the detail).  Then you can take an action
by |ku-key-mappings|.

You can also write your own sources.  See |ku-sources| for the detail.

						*ku-auto-directory-insertion*
(planned) Whenever "/" is typed, the name of an appropriate directory will be
automatically inserted.  This feature is derived from bluewind
<http://cspace.s2.xrea.com/software/bluewind/>.




==============================================================================
INTERFACE					*ku-interface*

------------------------------------------------------------------------------
COMMANDS					*ku-commands*

:Ku {source}					*:Ku*
			Start selecting items from {source}.


------------------------------------------------------------------------------
FUNCTIONS					*ku-functions*

ku#start({source})				*ku#start()*
			Function version of |:Ku|.

ku#default_key_mappings({override_p})		*ku#default_key_mappings()*
			Define the following key mappings which are local to
			the current buffer in Normal mode and Insert mode.
			Existent key mappings will be override if {override_p}
			is true.

			{lhs}		{rhs}				~
			------------------------------------------------~
			<C-c>		<Plug>(ku-cancel)
			<Return>	<Plug>(ku-do-the-default-action)
			<C-m>		<Plug>(ku-do-the-default-action)
			<Tab>		<Plug>(ku-choose-an-action)
			<C-i>		<Plug>(ku-choose-an-action)
			<C-j>		<Plug>(ku-next-source)
			<C-k>		<Plug>(ku-previous-source)

ku#custom_action({source}, {action}, {function})	*ku#custom_action()*
			Define a new {action} for items from {source}.
			{function} is the name of a function which will be
			called as {action}.

			{source} is the name of a source or "common".  In the
			former case, the given {action} is only available for
			the given {source}.  In the latter case, the given
			{action} is available for all sources.

			See also |ku-action-table|.

ku#custom_key({source}, {key}, {action})	*ku#custom_key()*
			Define a {key} to do the {action} for items from
			{source} in |<Plug>(ku-choose-action)|.

			{source} is the name of a source or "common".  In the
			former case, the given {key} is available for the
			given {source}.  In the latter case, the given {key}
			is available for all sources.

			See also |ku-key-table|.


------------------------------------------------------------------------------
KEY MAPPINGS					*ku-key-mappings*

In the ku window, the following key mappings are defined:

<Plug>(ku-cancel)				*<Plug>(ku-cancel)*
			Cancel selecting (and close the ku window).

<Plug>(ku-do-the-default-action)      	    *<Plug>(ku-do-the-default-action)*
			Do the default action for the current item.

<Plug>(ku-choose-an-action)			*<Plug>(ku-choose-an-action)*
			Show the mesasge on available actions, take a single
			key input, then do the appropriate action.  See also
			|ku-default-action-table| and |ku-default-key-table|.

<Plug>(ku-next-source)				*<Plug>(ku-next-source)*
<Plug>(ku-previous-source)			*<Plug>(ku-previous-source)*
			Change the preferred type (ascending / descending).

The default key mappings are defined by |ku#default_key_mappings()|.


------------------------------------------------------------------------------
PATTERN						*ku-pattern*

Inserted characters in the |ku-window| are treated as 2 "patterns".

- The one is "asis" pattern.  Ku tries to literally match user input to each
  item.

- The other one is "skip" pattern.  User input is split by spaces, and each
  space is treated as a wild card, so it is matched to any 0 or more
  characters.  Ku tries to match this pattern for each item.

Ku uses the matched positions of the above 2 patterns for each item.  In the
completion list, items are sorted by matched positions.  Mathced position of
"asis" pattern have higher priority than "skip" pattern.  See also
|g:ku_common_junk_pattern|.


------------------------------------------------------------------------------
DEFAULT ACTION TABLE				*ku-default-action-table*

The following actions are available as the default ones:

cd						*ku-aciton-cd*
			|:cd| to the selected item.  If the item is the name
			of a directory, change to that one.  If the item is
			the name of a file, change to the directory which
			contains the file.

default						*ku-aciton-default*
			Do the default action for the selected item.  This
			action is overriden by each source.

ex						*ku-action-ex*
			Shift to Command-line mode, insert the selected item
			as a file or a directory, then move the cursor to the
			beginning of the command-line.  This action is useful
			to execute an Ex command on the selected item.

lcd						*ku-action-lcd*
			Like "cd", but does |:lcd| to the selected item.

nop						*ku-aciton-nop*
			Do nothing.  Use this action to remove an entry from
			a key table.


------------------------------------------------------------------------------
DEFAULT KEY TABLE				*ku-default-key-table*

Key		Action ~
--------	--------
/		cd	|ku-action-cd|
:		ex	|ku-action-ex|
;		ex	|ku-action-ex|
<Return>	default	|ku-action-default|
?		lcd	|ku-action-lcd|




==============================================================================
SOURCES						*ku-sources*

Sources are like kinds of items.  For example, ku includes "buffer" source.
It gathers all buffers as items to be completed.  You can choose and take an
action on a buffer with this source.  The same can be said for other sources.

						*ku-default-sources*
The following sources are included with the packages of ku:
- buffer	(|ku_buffer.txt|)

						*ku-source-action-table*
Sources have their own action table (|ku-action-table|).  These action tables
have higher priority than common action tables, but these have lower priority
than custom action table for each source.

						*ku-source-key-table*
Sources have their own key table (|ku-key-table|).  These key tables have
higher priority than common key tables, but these have lower priority than
custom key table for each source.

						*ku-source-api*
Sources are written as autoload scripts which are placed in "autoload/ku/"
directory in 'runtimepath'.  The names of sources are same as their file names
without the ".vim" extension.  The names of sources should consist of lower
cases only.  Sources must provide the following functions:

ku#{source}#on_start_session()		      *ku#{source}#on_start_session()*
			Function which is called whenever the current source
			is switched from another source to {source} or the
			|ku-window| is open if the current source is {source}.

ku#{source}#on_end_session()			*ku#{source}#on_end_session()*
			Function which is called whenever the current source
			is switched from {source} to another source or the
			|ku-window| is closed if the current source is
			{source}.

ku#{source}#action_table()			*ku#{source}#action_table()*
			Return the default action table for {souce}.  See also
			|ku-action-table|.

ku#{source}#key_table()				*ku#{source}#key_table()*
			Return the default key table for {souce}.  See also
			|ku-key-table|.

ku#{source}#gather_items({pattern})		*ku#{source}#gather_items()*
			Return a list of items which are matched to the given
			{pattern}.  See |complete-items| for the detail of
			items.

			Sources may add additional entries for each item.
			Keys of such entries must be prefixed with
			"_{source}_", where {source} is the name of a source.

			Also, ku adds additional entries for each item.  Keys
			of such entries are prefixed with "_ku_".  The
			following keys are officially provided:

			_ku_completed_p		(boolean)
				Normally true.  If the item is not completed
				one, it is set to false.




==============================================================================
CUSTOMIZING					*ku-customizing*

User plugin-ku-buffer-initialized		*plugin-ku-buffer-initialize*
	This event is published whenever the ku buffer is created then being
	initialized.  Use this event to do your initialization, for example,
	customize key mappings for the ku buffer.

	Note that if there is no |:autocmd| for this event,
	|ku#default_key_mappings()| will be called.  Otherwise, it will not be
	called.

g:ku_common_junk_pattern			*g:ku_common_junk_pattern*
g:ku_{source}_junk_pattern			*g:ku_{source}_junk_pattern*
	Variables to hold regular expressions to determine "junk" items.  Junk
	items are listed at the bottom of the completion menu.
	g:ku_common_junk_pattern is used for items from any sources, while
	g:ku_{source}_junk_pattern is used for items from a specific {source}.




==============================================================================
TERMS						*ku-terms*

ku window					*ku-window* *ku-buffer*
			The window which is opened by |ku-commands|.
			This window will be automatically closed when:
			- An action is taken for an item.
			- Selecting is canceled.
			- Another window or another tab page becomes active.

action table					*ku-action-table*
			Action table is a dictionary, where each key is the
			name of an action, and each value is the name of
			a function that implements the action.

			There are 4 action tables for each source, and above
			listed ones have higher priority than below listed
			ones:

			1. custom action table for a source
			2. default action table for a source
			3. custom action table for all sources
			4. default action table for all sources

			Custom action tables can be configured with
			|ku#custom_action()|.

key table					*ku-key-table*
			Key table is a dictionary, where each key is a single
			character that represents a key to choose an action by
			|<Plug>(ku-choose-an-action)|, and each value is the
			name of an action to be executed by the key.

			There are 4 key tables for each source, and above
			listed ones have higher priority than below listed
			ones:

			1. custom key table for a source
			2. default key table for a source
			3. custom key table for all sources
			4. default key table for all sources

			Custom key tables can be configured with
			|ku#custom_key()|.




==============================================================================
BUGS						*ku-bugs*

- Many bugs must be around the world.




==============================================================================
CHANGELOG					*ku-changelog*

0.1.0	2008-07-18T15:23:02+09:00
	- Redesign.

0.0.0	2008-01-25T19:34:13+09:00
	- Derived from buffuzzy and zapit.
	- Still under development.




==============================================================================
vim:tw=78:ts=8:ft=help:norl:fdm=marker:
