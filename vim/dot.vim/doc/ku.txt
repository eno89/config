*ku.txt*	Interface for everything

Version 0.3.0
Script ID: 2337
Copyright (C) 2008-2009 kana <http://whileimautomaton.net/>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*ku-contents*

Introduction		|ku-introduction|
Interface		|ku-interface|
  Commands		  |ku-commands|
  Functions		  |ku-functions|
    Core		    |ku-functions-core|
    Sorters		    |ku-functions-sorters|
  Key Mapings		  |ku-key-mappings|
  Pattern		  |ku-pattern|
  Default Sources	  |ku-default-sources|
Sources			|ku-sources|
Customizing		|ku-customizing|
Terms			|ku-terms|
Bugs			|ku-bugs|
Changelog		|ku-changelog|




==============================================================================
INTRODUCTION					*ku-introduction*

*ku* is a Vim plugin to provide a new interface for Vim.  With ku,

- You can choose many items from various sources such as buffers, files and
  others.  ku suggests proper candidates for your input and completes your
  input elegantly, so you don't have to type much and you can choose what you
  want from many candidates very quickly.

- After choosing a candidate, you can take an action on the candidate.
  Various actions are available for each kind of candidates, and you can
  execute one of them with a comfortable way.

  For example, if a candidate is corresponding to a buffer, you can switch to
  the buffer, delete the buffer, change the working directory according to the
  buffer, yank the name of the buffer, etc.  And there are many ways even to
  switch to a buffer - use the current window, open a new window to the
  specified direction then use it, use a new tabpage.

To start a selection, call |ku#start()|.  |the-ku-window| will be opened at
the top of the current tabpage.  The window is to choose candidates and to
take an action on a candidate.  In the window,

- |ins-completion-menu| is automatically appeared to show candidates.  As you
  input a character, the menu will be updated to show more proper candidates
  for the given input.  See also |ku-pattern| for how ku interpret what you
  input.

- If you find what you want in the menu, choose it with <C-n> or <C-p>.  If
  the first candidate in the menu is what you want, you don't have to choose
  it.

- Then you can take an action on the candidate with <Enter> or <Tab>.

  - With <Enter>, ku executes the default action for the candidate.

  - With <Tab>, ku shows a list of available actions for the candidate.  Each
    action is labeled with a key to execute it.  If you type one of the keys,
    the corresponding action will be executed.

  <Enter> and <Tab> are just the default key bindings.  You can customize
  them, of course.  See |ku-key-mappings| for the details.

- If you don't want to take any action and stop to select, type <C-c> in any
  mode.  The window is closed and the current tabpage is restored to the
  previous state.

In ku, a kind of candidates is called "source".  Several sources are available
by default.  See |ku-default-sources| for the details.  You can write your own
sources if you want to choose and to take action on something which is not
provided by the default sources.  See also |ku-sources| for the details.


Requirements:
- Vim 7.2 or later

Sources and related scripts:
http://www.vim.org/scripts/script_search_results.php?keywords=ku

Latest version:
http://github.com/kana/config/commits/vim-ku

Document in HTML format:
http://kana.github.com/config/vim/ku.html




==============================================================================
INTERFACE					*ku-interface*

------------------------------------------------------------------------------
COMMANDS					*ku-commands*

There is no command at this moment.


------------------------------------------------------------------------------
FUNCTIONS					*ku-functions*

CORE						*ku-functions-core*

					 *ku#define_default_ui_key_mappings()*
ku#define_default_ui_key_mappings({override-p})
			Define default ui key mappings to use ku in the
			current buffer.

			If {override-p} is true, existing key mappings which
			have the same {lhs}es are overridden.  Otherwise,
			existing key mappings are not overridden.

			See |ku-default-ui-key-mappings| for the details of
			key bindings.

ku#define_source({definition})			*ku#define_source()*
			Define a new source.

			{definition} is a dictionary which describes the
			details of the source to be defined.  See |ku-source|
			for the details.

ku#start({sources}=0, {initial-pattern}='')	*ku#start()*
			Start a ku session.

			{source} is a list of the names of sources to get
			candidates for this session.  The default value is 0,
			it means to use all available sources.

			{initial-pattern} is a string to be inserted before
			user input.  The default value is '', so nothing will
			be inserted.

SORTERS						*ku-functions-sorters*

ku#sorter#default#sort({candidates}, {args})	*ku#sorter#default#sort()*
			Sort {candidates} by the method which is specified by
			|ku#sorter#default#use()|.  The default method is
			|ku#sorter#simple#sort()|.

ku#sorter#default#use({sorters})		*ku#sorter#default#use()*
			Use {sorters} as the default methods to sort
			candidats.  {sorters} is a list of funcrefs.
			See also |ku-source-sorters| for the details.

			Return value is a list of funcrefs of the old sorters.

ku#sorter#simple#sort({candidates}, {args})	*ku#sorter#simple#sort()*
			Sort {candidates} by |sort()|.


------------------------------------------------------------------------------
KEY MAPPINGS					*ku-key-mappings*

In |the-ku-buffer|, the following key mappings are defined in Normal mode and
Insert mode.

DEFAULT UI KEY MAPPINGS				*ku-default-ui-key-mappings*

See also |ku#define_default_ui_key_mappings()|.

Key sequence	Meaning ~
------------	----------------------------------- ~
<C-c>		|<Plug>(ku-quit-session)|
<C-i>		|<Plug>(ku-choose-and-do-an-action)|
<C-m>		|<Plug>(ku-do-the-default-action)|
<Enter>		|<Plug>(ku-do-the-default-action)|
<Return>	|<Plug>(ku-do-the-default-action)|
<Tab>		|<Plug>(ku-choose-and-do-an-action)|

NAMED KEY MAPPINGS				*ku-named-key-mappings*

<Plug>(ku-choose-and-do-an-action)	  *<Plug>(ku-choose-and-do-an-action)*
			Like |<Plug>(ku-do-the-default-action)|, but you can
			choose an action from all available actions for the
			currently selected candidate.

			This function does:
			(1) show a message about what actions are available,
			(2) take an input of a single key stroke,
			(3) then do the action corresponding to the key.

<Plug>(ku-do-the-default-action)      	    *<Plug>(ku-do-the-default-action)*
			Do the default action on the currently selected
			candidate, then quit the current session.

<Plug>(ku-quit-session)				*<Plug>(ku-quit-session)*
			Quit the current session.


------------------------------------------------------------------------------
PATTERN						*ku-pattern*

Inserted characters in |the-ku-buffer| are treated as a pattern.  ku uses this
pattern to suggest more proper candidates.  The details are as follows:

FIXME: Details of pattern.


------------------------------------------------------------------------------
DEFAULT SOURCES					*ku-default-sources*

The following sources are included with packages of ku:

FIXME: Links to the documents of the default sources.




==============================================================================
SOURCES						*ku-sources*

Sources are like kinds of information.  For example, "buffer" source gathers
all buffers as candidates.  You can choose and take an action on a buffer with
this source.  The same can be said for other sources.


SOURCE SCRIPT CONVENTION			*ku-source-script-convention*

A source should consist of the following scripts:

autoload/ku/source/{name}.vim
	Delay to load the details of sources.
doc/ku-source-{name}.txt
	The document of sources.
plugin/ku/source/{name}.vim
	Define sources.

Here {source} is the name of a source.

FIXME: Details if the name of a source contains "/", "_" and/or "-".


SOURCE DEFINITION				*ku-source-definition*

A source can be defined by |ku#define_source()|.  It takes the definition of
a source which is expressed as a dictionary.  In the dictionary, each key is
called "attribute" of the source.  See also |ku-source-attributes| for the
details of available attributes.


SOURCE ATTRIBUTES				*ku-source-attributes*

See also |ku-notation| for {args} and others.

						*ku-source-gather_candidates*
gather_candidates	function		(required)
			A function to gather candidates.  It takes one
			argument {args} and it must return {candidates}
			according to {args}.

						*ku-source-name*
name			string			(requried)
			The name of a source.  It must consist of the
			following characters:
			- a-z
			- 0-9
			- /
			- _
			- -

			For example:
			- "buffer", "history" and "metarw/git" are valid.
			- "BadOne", "!@#$%^&*()_[]{}-|" and "" are not valid.

						*ku-source-sorters*
sorters			list of funcrefs	(optional)
			Functions to sort candidates.

			Each function in the list:
			- Takes {candidates} and {args}, where {candidates} is
			  a list of candidates.
			- Returns a sorted version of {candidates}.
			- May modify a given {candidates} in-place, but must
			  not modify any value in {candidates}.

			This key is optional; if it is not given,
			[|ku#sorter#default#sort()|] is used as the default
			value.


NOTATION					*ku-notation*

{args}						*ku-notation-{args}*
			A dictionary to contains various information to deal
			with candidates.  The details of this dictionary are
			as follows:

			"pattern"	(string)
				The currrent pattern which user inputs in
				|the-ku-buffer|.

{candidate}					*ku-notation-{candidate}*
			A dictionary which represents a candidate.  The
			details of this dictionary are mostly same as
			|complete-items|.

			Sources may add additional entries for this
			dictionary.  Keys of such entries must be prefixed
			with "ku_{source}_", where {source} is the name of
			a source.

			Also, ku may add additional entries for this
			dictionary.  Keys of such entries are prefixed with
			"ku__".

{candidates}					*ku-notation-{candidates}*
			A list of {candidate}.




==============================================================================
CUSTOMIZING					*ku-customizing*

FIXME: Description on customization.




==============================================================================
TERMS						*ku-terms*

ku session					*ku-session*
			A ku session is a period of time while |the-ku-window|
			is opened and it is visible.

ku window				       *the-ku-window* *the-ku-buffer*
			The window which is opened by |ku#start()|.

			This window will be automatically closed when:
			- An action is taken for a candidate.
			- Another window or another tab page becomes active.
			- |<Plug>(ku-quit-session)| is executed.




==============================================================================
BUGS						*ku-bugs*

KNOWN ISSUES ~

- |<Plug>(ku-choose-an-action)| is not available at this moment.

- |the-ku-buffer| doesn't work well if a preview window exists in the current
  tabpage.  |ins-completion-menu| is not properly displayed.


PLANNED FEATURES ~

- Add more useful |ku-functions-sorters|.

- Smart chaching.

- Component completion like bluewind
  <http://cspace.s2.xrea.com/software/bluewind/>.

- In-line completion in any buffer, not only in |the-ku-buffer|.

- More source attributes:
  
  - maximum_number_of_candidates

  - maximum_time_to_gather_candidates

  - required_pattern_length

- |ku#start()|: Accept a list of source definitions instead of the names of
  sources which must be defined by |ku#define_source()| beforehand.

- Accept various types of values for attributes of |ku-source-definition| for
  convenience:

  - Accept a |Funncref| as "[a_funcref]", instead a list of |Funcref|s.

  - Accept a string which represents the name of the function,
    instead of a |Funcref| to the function.


ETC ~

- Welcome your feedback.




==============================================================================
CHANGELOG					*ku-changelog*

0.3.0	2009-09-29T23:46:19+09:00		*ku-changelog-0.3.0*
	Redesigned.  It's not compatible with any previous version.

0.2.5	2009-09-01T19:40:18+09:00		*ku-changelog-0.2.5*
	Bugfixes:
	- |ku#default_key_mappings()|: Define <S-Return> and <C-Return> to
	  execute |<Plug>(ku-do-the-default-action)|.

0.2.4.1	2009-05-29T09:23:03+09:00		*ku-changelog-0.2.4.1*
	Bug fixes:
	- |ku-file|: Fix a serious bug which was mixed in ku source file
	  version 0.1.3.  See |ku-file-changelog-0.1.4| for the details.

0.2.4	2009-05-25T00:53:07+09:00		*ku-changelog-0.2.4*
	Feature enhancements:
	- |ku-file|: Support to deal with files in archives.  See also
	  |ku-file-changelog-0.1.3| for the details.

	Misc. improvements:
	- |filetype-ku|: Modify the default initialization on |the-ku-buffer|.
	  Old versions don't override existing key mappings.
	  New versions now override existing key mappings.
	  It is convenient for starters to use ku without any configuration.

	  For example, many people customize <Tab> to complete something in
	  Insert mode.  In such cases, old versions don't override <Tab> to
	  |<Plug>(ku-choose-an-action)|, but it's very inconvenient to use ku.
	  All key mappings defined by |ku#default_key_mappings()| are local to
	  a buffer, so that it's not necessary to avoid overriding.

	  Thanks to rphillips and other persons for reporting this problem.

	Bug fixes:
	- |ku#restart()|: Fix a bug that is caused by a change in the previous
	  version.  As ku#restart() is called, the prompt character will be
	  inserted many times.

0.2.3	2009-05-16T03:05:10+09:00		*ku-changelog-0.2.3*
	Feature enhancements:
	- Add |g:ku_personal_runtime| to customize where information such as
	  |ku-input-history| to be saved.
	- Add |:KuReload| and |ku#reload()| to reload the whole system of ku.

	Misc. improvements:
	- Improve an error message.
	- Add tests, not perfect yet.
	- |ku-input-history|: Change the directory to save input history.  Use
	  the first directory in the default value of 'runtimepath', instead
	  of the current value of 'runtimepath'.  Because some users customize
	  'runtimepath', and the first directory in such values may not refer
	  a directory for personal settings.

	Bug fixes:
	- Fix a bug that ku list the same sources many times if there are 2 or
	  more source scripts which filenames are the same in 'runtimepath'.
	- Fix bugs that ku may be confuse if typeahead buffer is not empty at
	  the beginning of a |ku-session|.
	- |ku#set_the_current_input_pattern()|:
	  - Fix a wrong description in the document.
	  - Fix a bug on the treatment of a given string.  If a given string
	    starts with the same character as the prompt, that character is
	    treated as the prompt and not a part of the given string, so it's
	    not easy to set such strings.
	  - Fix a bug on the automatic completion.  The cursor position may be
	    altered in several cases.

	See also:
	- |ku-source-changelog-0.1.2|

0.2.2	2009-05-13T21:40:20+09:00		*ku-changelog-0.2.2*
	Bug fixes:
	- Fix an assumption that the separator for pathes is "/".  This
	  assumption causes unexpected behavior on some environments such as
	  Microsoft Windows.
	- Fix a wrong condition to use 'shellslash'.

	Feature enhancements:
	- Add API functions to deal with pathes.  See also:
	  - |ku#make_path()|
	  - |ku#path_separator()|

	See also:
	- |ku-file-changelog-0.1.2|

0.2.1	2009-05-01T01:40:08+09:00		*ku-changelog-0.2.1*
	Bug fixes:
	- |<Plug>(ku-choose-action)|: Fix a bug that an error message is
	  displayed unexpectedly, whenever a key which is not associated with
	  any action is pressed.
	- Fix a bug that the current source name in |the-ku-buffer| is not
	  highlighted correctly in some cases.
	- Document: Fix a wrong description on the default value of
	  |g:ku_history_reloading_style|.  It is "idle", not "once".
	- |ku__source|: Fix a bug that it doesn't exist for items which are
	  not completed by ku.
	- |ku-action-left| and other actions: Fix a bug that they don't close
	  a window or a tab page created by them even if |ku-action-default|
	  is failed.

	Incompatible changes:
	- Change the behavior not to take any action if an input pattern is
	  empty and there is no item, because there is nothing to do in such
	  case.
	- Change the specification on |ku-action|.  Now the function
	  corresponding to an action must return 0 if it succeeds, or a string
	  which represents an error message if it fails.  Old versions don't
	  touch on return values.

	Misc.:
	- Refactor the core.

0.2.0	2009-04-28T01:45:50+09:00		*ku-changelog-0.2.0*
	- Add |ku__source|.
	- Fix a few assumptions on path separator.
	- Improve the performance to complete items.
	  Now it is 10 times faster than old versions.
	- Modify the sorting order of items.
	  If an item contains any character of |g:ku_component_separators|,
	  it is prior to other items which don't contain that characters.
	  For example, if there are two items "foo/bar" and "foo-bar",
	  new versions put "foo/bar" before "foo-bar",
	  while old versions put "foo-bar" before "foo/bar".
	  This change is to avoid selecting unexpected item with
	  |ku-auto-component-completion|.
	- |ku-auto-component-completion|:
	  - Improve the conditions to activate.
	    Now it is not unexpectedly activated for some cases.
	  - Improve how many components to be completed.
	- |g:ku_acc_style|: New.

	Incompatible changes:
	- Change many points about |ku-sources| and |ku-action|.
	  - Sources for 0.1.x are not compatible with 0.2.x.
	  - |ku#{source}#gather_items()|:
	    - Change the naming rules about additional entries for each item:
	      Old versions use "_{source}_..." and "_ku_...".
	      New versions use "ku_{source}_..." and "ku__..." instead.
	    - Add several rules on return values.
	  - |ku#{source}#gather_items()|: New API to implement.
	  - |ku#{source}#acc_valid_p()|:
	    Change the default value if it is not defined.
	    Old versions always return true.
	    New versions always return false.
	  - |ku-special-sources|: Delete this concept.  Now all source scripts
	    may provide more than one sources.
	  - |ku#{source}#available_sources()|: New function to implement.
	  - |ku-source-api|: Most of functions must take an additional
	    argument about source name.
	  - |ku#{source}#event_handler()|: Delete.  This function is now split
	    into the following functions:
	    - |ku#{source}#on_before_action()|
	    - |ku#{source}#on_source_enter()|
	    - |ku#{source}#on_source_leave()|
	- |ku-pattern|:
	  - Change the definition of "word" pattern.
	    Old versions use spaces and slashes as wildcards.
	    New versions use only spaces as wildcards.
	  - Add an assumption - see |ku-pattern-prefix-assumption|.

0.1.9	2008-12-31T06:52:02+09:00		*ku-changelog-0.1.9*
	- Add |g:ku_history_reloading_style|.
	- Change the default timings to reload and to save |ku-input-history|.
	  See also "idle" on |g:ku_history_reloading_style|.
	  Old versions use "each", but "idle" is used instead from now on.

0.1.8	2008-12-24T17:33:31+09:00		*ku-changelog-0.1.8*
	- Add |g:ku_choosing_actions_sorting_style|.
	- Change the sorting style of |<Plug>(ku-choose-an-action)|.
	  See also |g:ku_choosing_actions_sorting_style|.
	- Fix some bugs - see |ku-buffer-changelog| and |ku-file-changelog|.

0.1.7	2008-12-11T17:08:52+09:00		*ku-changelog-0.1.7*
	- Include new source |ku-source|.
	- Change the default value of |g:ku_history_added_p|.
	  Now it also omits patterns for source |ku-source|.
	- Add |<Plug>(ku-choose-source)| and the default key mapping for it
	  (see |ku#default_key_mappings()|).
	- Add |ku#get_the_current_input_pattern()|.
	- Add |ku#set_the_current_input_pattern()|.
	- Fix typos in this document.
	- Revise the internal stuffs.
	- Change |ku#restart()| to use the last inputted pattern and the last
	  active source.  Old versions don't use ones if a selection is
	  canceled by |<Plug>(ku-cancel)|.
	- Add |ku-action-selection|
	  and the entry for it in |ku-default-key-table|.
	- Show an additional message while choosing an action for
	  |<Plug>(ku-do-persistent-action)|.  In older versions, it cannot be
	  distinct from a message either |<Plug>(ku-do-persistent-action)| or
	  |<Plug>(choose-an-action)| is used.

	Incompatible changes:
	- Remove |ku-action-persistent|;
	  use |<Plug>(ku-do-persistent-action)| instead.
	- Change |ku-action-cancel| - now it cannot be overridden,
	  though it should not be overridden from the beginning.
	- Don't add the current input pattern into |ku-input-history|
	  if the action to be taken is |ku-action-cancel|.
	  Old versions do add, but it seems to be unexpected behabior.

0.1.6	2008-12-08T16:41:47+09:00		*ku-changelog-0.1.6*
	- Add |ku#switch_source()|.
	- Add |ku-action-persistent|, |<Plug>(ku-do-persistent-action)| and
	  the default key mapping for it (see |ku#default_key_mappings()|).
	- Include new source |ku-history|.
	- Add |ku#available_source_p()|.
	- Change the default value of |g:ku_history_added_p|.  Now it also
	  omits patterns for source |ku-history|.

	Incompatible changes:
	- Change the behavior of |:Ku| and |ku#start()| if ku is already
	  active.  Old ones change the current source to the specified source.
	  New ones don't nothing.  Use |ku#switch_source()| to change the
	  current source.
	- Change the specification of |g:ku_history_added_p|.  It took
	  a single argument, but now, it takes 2 arguments.

0.1.5	2008-12-08T01:31:24+09:00		*ku-changelog-0.1.5*
	- Show the information about |ku-input-history| in |the-ku-buffer|.
	- |ku#custom_action()|: Accept "common" for {source2} to specify an
	  action from the default action table for all sources.  For example:
>
	  call ku#custom_action('buffer', 'xyzzy', 'common', 'tab-Right')
<
	- Modify |ku-action-right| and other actions to refer "default" action
	  from the default action table of the current source.  Because they
	  may fall into infinite loop if user-defined "default" action refers
	  "default" action.
	- Add |g:ku_history_size|.
	- Add |<Plug>(ku-older-history-and-source)| and
	  |<Plug>(ku-newer-history-and-source)|.
	- Add |<Plug>(ku-history-source)|.

	Incompatible changes:
	- Change the format of value returned by |ku#input_history()|.
	  Now it is a list of dictionaries, not a list of strings.

0.1.4	2008-09-29T02:31:12+09:00		*ku-changelog-0.1.4*
	- Add |ku#{source}#acc_valid_p()| to filter items for
	  |ku-auto-component-completion|.
	- Add |g:ku_history_added_p|.
	- Fix an error when input history becomes larger than its maximum
	  size.
	- Add a way to disable a specific action.  See |ku-disable-action|.
	- Set 'filetype' of |the-ku-buffer| to "ku".
	- Add syntax highlighting for |the-ku-buffer| and messages by
	  |<Plug>(ku-choose-an-action)|.
	- Refactor on minor stuffs.

	Incompatible changes:
	- Don't publish "User plugin-ku-buffer-initialized".
	  Use "FileType ku" and/or filetype plugin instead.

0.1.3	2008-09-28T03:30:42+09:00		*ku-changelog-0.1.3*
	- Incompatible change:
	  - For |ku-special-sources|, |ku-source-api| takes the name of the
	    current source as the 1st argument.
	  - |ku-SourceEnter| and |ku-SourceLeave| don't take extra argument.
	- |ku#custom_action()|: Add new way to specify {function}.
	- |ku#start()|: Add {initial-pattern}.
	- Show some information on the selected item while choosing action.
	- Add |ku-input-history|.
	- Add |ku#restart()|.
	- Add source-specific priority on sorting items.  See
	  |_ku_sort_priority| for the detail.

0.1.2	2008-08-11T01:56:15+09:00		*ku-changelog-0.1.2*
	- Fix a bug in |ku-prefix-expansion| - it didn't expand proper prefix
	  if there are 2 or more prefixes which have the same head part.  For
	  example, if there are prefixes "ab", "abc", "abcd" and so forth, it
	  is not possible to predict which prefix will be expanded for user
	  input "abcd/efgh".  It should expand "abcd", but it may use "abc" or
	  "ab" instead.
	- Add |ku-assumptions|.
	- Change the name of the ku buffer for Microsoft Windows to avoid
	  unexpected behavior (see |g:ku_buffer_name| for the detail).
	- Add |g:ku_buffer_name|.
	- Improve |ku-auto-directory-completion|.  Now the feature is called
	  as |ku-auto-component-completion|.
	- Fix a bug in |ku-auto-directory-completion|.  It may raise an error
	  if user input contains a special character.
	- Add |ku-prefix-expansion|.
	- Fix |:KuDoAction| to check whether ku is active or not.
	- Improve the performance of |ku#available_sources()|.
	- Add priorities for |ku-sources-list|.

0.1.1	2008-08-10T12:17:09+09:00		*ku-changelog-0.1.1*
	- Add |ku-special-sources|.
	- Remove the feature to provide |metarw-schemes| as |ku-sources|.
	  This feature is implemented as a special source and it is included
	  in |metarw| 0.0.1 or later.
	- Fix requirements - ku uses |fnameescape()| which is added since Vim
	  7.1.299.  (thanks to id:thinca)

0.1.0	2008-07-18T15:23:02+09:00		*ku-changelog-0.1.0*
	- Redesign.

0.0.0	2008-01-25T19:34:13+09:00		*ku-changelog-0.0.0*
	- Derived from buffuzzy and zapit.
	- Still under development.




==============================================================================
vim:tw=78:ts=8:ft=help:norl:fen:fdl=0:fdm=marker:
